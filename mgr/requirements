package GlastSvc
version v1r3

branches src mgr doc

use instrument v2r3
use Gaudi v8
use data 
use GlastEvent v1r2

use GaudiSvc v4
use Auditors v1
use RootHistCnv v1


library GlastSvc ../GlastSvc/GlastDetSvc/*.h ../GlastSvc/*.h \
                 GlastDetSvc/*.h  GlastDetSvc/*.cpp \
                 EventSelector/*.h  EventSelector/*.cpp \
                 ../GlastSvc/Irf/*.h Irf/*.cpp \
		../GlastSvc/Raw/*.h Raw/*.cpp \
		Dll/*.cpp 
            

macro GlastSvcDir  "$(GLASTSVCROOT)/$(DEBUGDIR)"

macro GlastSvc_linkopts   " " \
      LinuxStatic         "$(GlastSvcDir)/libGlastSvc.a -u GlastSvc_loadRef" \
      VisualCStatic       "$(GlastSvcDir)/libGlastSvc.lib /include:_GlastSvc_loadRef"

macro GlastSvc_stamps     ""                              \
      LinuxStatic         "$(GlastSvcDir)/GlastSvc.stamp" \
      LinuxStaticdbx      "$(GlastSvcDir)/GlastSvc.stamp" \
      VisualCStatic       "$(GlastSvcDir)/GlastSvc.stamp"


set   GlastSvcShr           "${GLASTSVCROOT}/${DEBUGDIR}/libGlastSvc"


private

include_path $(GLASTSVCROOT)

# this for MSVCC, to fix incompatibilities, turn off warnings
macro_append cppflags ""\
       VisualC " /FI$(ntconfigfile)" 

# note that the debug versions of the used libraries are inserted below

# for the moment, use libraryshr_linkopts to fix red hat 6.2 linking problem
#macro GlastSvc_shlibflags   "$(componentshr_linkopts) $(use_linkopts)" \
macro GlastSvc_shlibflags   "$(libraryshr_linkopts) $(use_linkopts)" \
                 VisualC  "Service.obj Converter.obj DataObject.obj $(componentshr_linkopts) $(use_linkopts) $(Win32Debug)"


# WinIncludes is to allow header files to be added to the 
# VC++ workspace, without causing build problems on unix

macro WinInclude1 "" VisualC "test/CreateEvent.h" 
macro WinInclude2 "" VisualC "test/jobOptions.txt"'

# build this for non-shareable testing
# note the addition of Raw. Take out shortly.
application test  test/*.cpp \
                  $(WinInclude1) $(WinInclude2) 

